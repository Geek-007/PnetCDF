------------------------------------------------------------------------------
This is essentially a placeholder for the next release note ...
------------------------------------------------------------------------------

  o New features
    * The configure environment has been migrated to use automake.
    * Building shared libraries is now supported with configure option
      --enable-shared. The default is building static library only. Note
      linking shared libraries is not recommended due to the likely performance
      degradation.

  o New Limitation
    * PnetCDF now requires the underlying MPI library define data type
      MPI_Offset to be an 8-byte integer. Configuring process of PnetCDF will
      be aborted if MPI_Offset is detected to be of size 4 bytes. See revision
      r2944.  It was recently found that OpenMPI versions 2.0.2 and 1.10.6 on
      32-bit machines configure MPI_Offset as a 4-byte integer, even if the
      32-bit machines support large files. See the discussion thread in
      OpenMPI: https://github.com/open-mpi/ompi/issues/3195
    * The maximum number of files that can be simultaneously opened by an MPI
      process is now limted to 1024 (a constant NC_MAX_NFILES defined in
      pnetcdf.h).

  o New APIs
    * none

  o New optimization
    * none

  o Syntax changes
    * Add C type qualifier const to argument fill_value of ncmpi_def_var_fill
      to indicate the contents pointed by fill_value is immutable.

  o Semantics updates
    * When the file create/open modes are not consistent among processes, the
      modes will be replaced by rank 0's mode and PnetCDF library will still
      try to create/open the file. Error code NC_EMULTIDEFINE_CMODE or
      NC_EMULTIDEFINE_OMODE will be returned on processes whose modes disagree
      with rank 0's. If safe mode is on, then rank 0 will also get the error
      code.

  o New utility program
    * none

  o New error code precedence
    * none

  o New error code
    * none

  o New PnetCDF hint
    * none

  o New run-time environment variables
    * none

  o New example programs
    * none

  o New programs for I/O benchmarks
    * none

  o New test program
    * test/testcases/null_args.c - tests whether the correct error codes can
      be returned when using NULL arguments for start, count, stride, or imap

  o Other updates:
    * Add checking for error code NC_ELATEFILL.
    * Rename pkg-config file from pnetcdf.pc to libpnetcdf.pc
    * Configure time variables TEST_SEQRUN, TEST_MPIRUN, and TEST_OUTDIR are
      renamed to TESTSEQRUN, TESTMPIRUN, and TESTOUTDIR, respectively, to
      avoid the variable name convention used by automake.

  o Bug fixes
    * From the releases of 1.6.1 through 1.8.1, putting attribute _FillValue
      automatically turns on the fill mode for the variable. Similarly,
      deleting attribute _FillValue turns off the fill mode. However, this
      behavior does not conform with netCDF library. This release fixes this
      bug, so putting or deleting attribute _FillValue does not affect a
      variable's fill mode. See r2951.
    * Fix nc_test when running on an ARMv7 architecture, a raspberry pi, where
      char is unsigned and is little Endian, 32-bit machine. See r2922.
    * Fix the missing byte-swap required for retrieving user-defined fill
      values. See r2864. This fix is critical when PnetCDF is configured with
      option erange-fill enabled (default mode) and the target platform is a
      Little Endian.
    * Fix test program test/nc_test/test_read.m4 and test/testcases/modes.c for
      testing whether the correct error codes can be returned when opening a
      non-existing file. Thanks to Mark Dixon for testing various MPI
      implementations, compilers, and file systems, we found that when using
      MVAPICH2 2.2, its Lustre driver always adds O_CREAT flag to the open()
      calls. Because of this behavior, the non-existing file will be created
      with zero length, which causes PnetCDF to spew NC_ENOTNC instead of
      NC_ENOENT. A bug report has been filed to MVAPICH. The fix shall come in
      the next release of MVAPICH. The bug report can be found in
      http://mailman.cse.ohio-state.edu/pipermail/mvapich-discuss/2017-February/006300.html

